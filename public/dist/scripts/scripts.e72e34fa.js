window.RTCPeerConnection=window.RTCPeerConnection||window.webkitRTCPeerConnection||window.mozRTCPeerConnection,window.RTCIceCandidate=window.RTCIceCandidate||window.mozRTCIceCandidate||window.webkitRTCIceCandidate,window.RTCSessionDescription=window.RTCSessionDescription||window.mozRTCSessionDescription||window.webkitRTCSessionDescription,window.URL=window.URL||window.mozURL||window.webkitURL,window.navigator.getUserMedia=window.navigator.getUserMedia||window.navigator.webkitGetUserMedia||window.navigator.mozGetUserMedia,angular.module("publicApp",["ngRoute","luegg.directives"]).config(function(a){a.when("/room/:roomId",{templateUrl:"views/room.html",controller:"RoomCtrl"}).when("/room",{templateUrl:"views/room.html",controller:"RoomCtrl"}).otherwise({redirectTo:"/room"})}).run(function(a){a.tabs=[]}),angular.module("publicApp").constant("config",{SIGNALIG_SERVER_URL:void 0}),Object.setPrototypeOf=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},angular.module("publicApp").controller("RoomCtrl",function(a,b,c,d,e,f){if(!window.RTCPeerConnection||!navigator.getUserMedia)return void(e.error="WebRTC is not supported by your browser. You can try the app with Chrome and Firefox.");var g;e.currentPath="",b.get().then(function(a){g=a,f.init(g),g=URL.createObjectURL(g),d.roomId?(f.joinRoom(d.roomId),e.getLoginForm()):(f.createRoom().then(function(a){c.path("/room/"+a)}),e.getLoginForm())},function(){e.error="No audio/video permissions. Please refresh your browser and allow the audio/video capturing."}),e.peers=[],f.on("peer.stream",function(a){console.log("Client connected, adding new stream"),e.peers.push({id:a.id,stream:URL.createObjectURL(a.stream)})}),f.on("peer.disconnected",function(a){console.log("Client disconnected, removing stream"),e.peers=e.peers.filter(function(b){return b.id!==a.id})}),e.getLocalVideo=function(){return a.trustAsResourceUrl(g)},e.getLoginForm=function(){setTimeout("$('#myModal').modal()",500)},e.textMsg=function(){var a=$("#m").val();if(0==a.indexOf("/")){var b=a.substring(1).split(" ");if(b[0]&&b[1]){a=b[0];var c=b[1];switch(a){case"nick":f.resetUserName(c,d.roomId),f.sendMsg(d.roomId,e.currentUser+": nickname changed to "+c),e.currentUser=c;break;case"join":e.joinRoom(b[1])}$("#m").val("")}else if(b[0]&&!b[1]){switch(a=b[0]){case"list":f.listChannels(d.roomId);break;case"users":e.displayRoomUsers(d.roomId)}$("#m").val("")}else{var g="unrecognized command: "+a+".\n You can type /help";$("#m").val(""),console.log(g)}}else f.sendMsg()},e.login=function(){f.setUserName(e.currentUser,d.roomId),setTimeout("$('#myModal').modal('hide')",500),e.displayRooms()},e.displayRooms=function(){f.getRoomsUris()},e.isActive=function(a){return a="/room/"+a,a===c.path()},e.displayRoomUsers=function(a){f.getRoomUsers(a)},e.joinRoom=function(a){f.addRoomToUser(e.currentUser,d.roomId,a)},e.leaveRoom=function(a){f.removeRoomToUser(e.currentUser,d.roomId,a)}}),angular.module("publicApp").factory("Room",function(a,b,c,d){function e(b){if(m[b])return m[b];var c=new RTCPeerConnection(l);return m[b]=c,c.addStream(k),c.onicecandidate=function(a){n.emit("msg",{by:i,to:b,ice:a.candidate,type:"ice"})},c.onaddstream=function(c){console.log("Received new stream"),p.trigger("peer.stream",[{id:b,stream:c.stream}]),a.$$digest||a.$apply()},c}function f(a){var b=e(a);b.createOffer(function(c){b.setLocalDescription(c),console.log("Creating an offer for",a),n.emit("msg",{by:i,to:a,sdp:c,type:"sdp-offer"})},function(a){console.log(a)},{mandatory:{OfferToReceiveVideo:!0,OfferToReceiveAudio:!0}})}function g(a){var b=e(a.by);switch(a.type){case"sdp-offer":b.setRemoteDescription(new RTCSessionDescription(a.sdp),function(){console.log("Setting remote description by offer"),b.createAnswer(function(c){b.setLocalDescription(c),n.emit("msg",{by:i,to:a.by,sdp:c,type:"sdp-answer"})})});break;case"sdp-answer":b.setRemoteDescription(new RTCSessionDescription(a.sdp),function(){console.log("Setting remote description by answer")},function(a){console.error(a)});break;case"ice":a.ice&&(console.log("Adding ice candidates"),b.addIceCandidate(new RTCIceCandidate(a.ice)))}}function h(b){b.on("peer.connected",function(a){f(a.id)}),b.on("peer.disconnected",function(b){p.trigger("peer.disconnected",[b]),a.$$digest||a.$apply()}),b.on("msg",function(a){g(a)}),b.on("chat message",function(a){if(a.username)var b='<li class="left clearfix"><div class="chat-body clearfix"><p><b>'+a.username+"</b>&nbsp;&nbsp;&nbsp;"+a.msg+"</p></div></li>";$(".chat").append(b)}),b.on("chat info",function(a){angular.forEach(a.msg,function(a){var b='<li class="left clearfix"><div class="chat-body clearfix"><p>&nbsp;&nbsp;&nbsp;'+a+"</p></div></li>";$(".chat").append(b)})}),b.on("listChannels",function(a){p.sendInfo(j,a)}),b.on("getRoomsUris",function(b){angular.forEach(b,function(b){var c=a.tabs.filter(function(a){return a.token===b.token});0===c.length&&a.tabs.push(b)}),a.$apply()}),b.on("joinRoom",function(c){angular.forEach(c,function(c){var d=c.token;b.emit("init",{room:d},function(a,b){i=b,j=a}),o=!0;var e=a.tabs.filter(function(a){return a.token===d});0===e.length&&a.tabs.push(c)}),a.$apply(c)}),b.on("leaveRoom",function(b){angular.forEach(b,function(b){a.tabs.slice(b)}),a.$apply(b)}),b.on("getUsers",function(a){p.sendInfo(j,a)})}var i,j,k,l={iceServers:[{url:"stun:stun.l.google.com:19302"}]},m={},n=c.connect(d.SIGNALIG_SERVER_URL),o=!1,p={joinRoom:function(a){o||(n.emit("init",{room:a},function(a,b){i=b,j=a}),o=!0)},createRoom:function(){var a=b.defer();return n.emit("init",null,function(b,c){a.resolve(b),j=b,i=c,o=!0}),a.promise},init:function(a){k=a},sendMsg:function(a,b){if(!b)var b=$("#m").val();return n.emit("chat message",{room:a,from:i,msg:b}),$("#m").val(""),!1},sendInfo:function(a,b){return console.log(b),n.emit("chat info",{room:a,msg:b}),!1},resetUserName:function(a,b,c){n.emit("currentUser",{currentRoom:b,user:a,id:i})},setUserName:function(a,b,c){n.emit("currentUser",{currentRoom:b,user:a,id:i})},listChannels:function(a){n.emit("listChannels",{currentRoom:a,id:i})},getRoomsUris:function(a){n.emit("getRoomsUris",{currentRoom:a,id:i})},addRoomToUser:function(a,b,c){n.emit("joinRoom",{currentRoom:b,id:i,user:a,addRoom:c})},removeRoomToUser:function(a,b,c){n.emit("leaveRoom",{currentRoom:b,id:i,user:a,addRoom:c})},getRoomUsers:function(a){n.emit("getUsers",{currentRoom:a,id:i})}};return EventEmitter.call(p),Object.setPrototypeOf(p,EventEmitter.prototype),h(n),p}),angular.module("publicApp").factory("Io",function(){if("undefined"==typeof io)throw new Error("Socket.io required");return io}),angular.module("publicApp").factory("VideoStream",function(a){var b;return{get:function(){if(b)return a.when(b);var c=a.defer();return navigator.getUserMedia({video:!0,audio:!0},function(a){b=a,c.resolve(b)},function(a){c.reject(a)}),c.promise}}}),angular.module("publicApp").directive("videoPlayer",function(a){return{template:'<div><video ng-src="{{trustSrc()}}" autoplay></video></div>',restrict:"E",replace:!0,scope:{vidSrc:"@"},link:function(b){console.log("Initializing video-player"),b.trustSrc=function(){return b.vidSrc?a.trustAsResourceUrl(b.vidSrc):void 0}}}});